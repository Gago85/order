from flask import Flask, request, jsonify
from flask_cors import CORS
from datetime import datetime
import os
import requests
import openpyxl
from openpyxl.styles import Font, Alignment, Border, Side
from openpyxl.utils import get_column_letter

app = Flask(__name__)
CORS(app)

# üí∞ –¶–µ–Ω—ã
prices = {
    "–°—Ç–∞–∫–∞–Ω 0.1": 200.00,
    "–°—Ç–∞–∫–∞–Ω 0.2": 10.00,
    "–°—Ç–∞–∫–∞–Ω 0.3": 10.00,
    "–°—Ç–∞–∫–∞–Ω 0.4": 10.00,
    "–°—Ç–∞–∫–∞–Ω –®–µ–π–∫ 0.4": 270.00,
    "–ö—Ä—ã—à–∫–∏ 90": 200.00,
    "–ö—Ä—ã—à–∫–∏ 80": 180.00,
    "–ö—Ä—ã—à–∫–∏ –®–µ–π–∫": 100.00,
    "–¢—Ä—É–±–æ—á–∫–∏": 350.00,
    "–ú–µ—à–∞–ª–∫–∏": 300.00,
    "–õ–æ–∂–∫–∏": 120.00,
    "–í–∏–ª–∫–∏": 120.00,
    "–õ–µ–Ω—Ç–∞ –ö–∞—Å—Å–æ–≤–∞—è 80–Ω–∞80": 600.00,
    "–õ–µ–Ω—Ç–∞ –¢–µ—Ä–º–∏–Ω–∞–ª": 260.00,
    "–ü–∞–∫–µ—Ç—ã –ú–∞–π–∫–∞": 50.00,
    "–ú—É—Å–æ—Ä–Ω—ã–µ 240–ª": 200.00,
    "–°—Ç–µ–∫–ª–æ–º–æ–π": 100.00,
    "–®—É–º–∞–Ω–∏—Ç": 150.00,
    "Cafiza 1–∫–≥": 1200.00,
    "–§–µ—Ä–∏": 150.00,
    "–ë–µ–ª–µ–∑–Ω–∞": 50.00,
    "–ø–µ–º–∞–ª—é–∫—Å": 100.00,
    "–õ–æ–≤—É—à–∫–∏": 350.00,
    "–ì—É–±–∫–∞": 50.00,
    "–§–∏–ª—å—Ç—Ä—ã –¥–ª—è Bovilor 50—à—Ç": 400.00,
    "—Ñ–∏–ª—å—Ä—ã –¥–ª—è —á–∞—è": 250.00,
    "–ü–µ—Ä—á–∞—Ç–∫–∏": 300.00,
    "–ü–µ—Ä–≥–∞–º–µ–Ω—Ç": 700.00,
    "–¢—Ä—è–ø–∫–∞ –∏–∑ –º–∏–∫—Ä–æ—Ñ–∏–±—Ä—ã": 40.00,
    "–ë—É–º–∞–∂–Ω—ã–µ –ø–∞–∫–µ—Ç—ã": 2000.00,
    "–°–∞–ª—Ñ–µ—Ç–∫–∏": 10.00,
    "–ó–µ–≤–∞": 200.00,
    "–¢—Ä—è–ø–∫–∏ –ø–æ–ª–æ–≤—ã–µ": 165.00,
    "–§–∏–ª—å—Ç—Ä –¥–ª—è —á–∞—è": 235.00,
    "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ RK": 7.00,
    "–ü–æ–¥—Å—Ç–∞–≤–∫–∞ 2—Ö": 220.00,
    "–ü–æ–¥—Å—Ç–∞–≤–∫–∞ 4—Ö": 320.00,
    "–ú–æ–ª–æ–∫–æ 3,2%": 1000.00,
    "–°–ª–∏–≤–∫–∏ 11%": 200.00,
    "–ö–æ–∫–æ—Å–æ–≤—ã–π": 190.00,
    "–ú–∏–Ω–¥–∞–ª—å–Ω—ã–π": 190.00,
    "–§—É–Ω–¥—É—á–Ω—ã–π": 180.00,
    "–ë–∞–Ω–∞–Ω–æ–≤—ã–π": 180.00,
    "–°–æ–µ–≤—ã–π": 180.00,
    "–Ø–≥–æ–¥–Ω—ã–π": 180.00,
    "–ö–ª—é–∫–≤–µ–Ω—ã–π": 180.00,
    "–û–±–ª–µ–ø–∏—Ö–æ–≤—ã–π": 180.00,
    "–®–∏–ø–æ–≤–Ω–∏–∫": 180.00,
    "–ò–º–±–∏—Ä–Ω—ã–π": 180.00,
    "–º–∞—Ä–∞–∫—É–π—è": 750.00,
    "–ú–∞–ª–∏–Ω–∞": 150.00,
    "–≠—Ä–ª–ì—Ä–µ–π": 250.00,
    "–°–µ–Ω—á–∞": 250.00,
    "–ú—è—Ç–∞": 50.00,
    "–ü—Ä—è–Ω—ã–π –ß–∞–π 250–≥": 950.00,
    "–ê–ø–µ–ª—å—Å–∏–Ω": 10.00,
    "–õ–∏–º–æ–Ω": 10.00,
    "–õ–∞–π–º": 15.00,
    "–ë–æ–Ω–ê–∫–≤–∞ 0.5": 700.00,
    "–ö–æ–ª–∞ 0.5": 800.00,
    "–¢–∞—Ç–Ω–∏ 1 —è—â": 1000.00,
    "–ê–ø–µ–ª—å—Å–∏–Ω–æ–≤—ã–π —Å–æ–∫ 1–ª": 110.00,
    "–¢–æ–Ω–∏–∫ 1 –±–∞–Ω–∫–∞": 100.00,
    "–í–æ–¥–∞ –ì–∞–∑ 1,5–ª": 60.00,
    "–ö–æ—Ñ–µ —ç—Å–ø—Ä–µ—Å—Å–æ ‚Ññ4": 2050.00,
    "–ó–µ—Ä–Ω–æ —Ñ–∏–ª—å—Ç—Ä": 850.00,
    "–ê—Ä–∞—Ö–∏—Å–æ–≤–∞—è –ü–∞—Å—Ç–∞": 250.00,
    "–ö–∞–∫–∞–æ 1–∫–≥": 1500.00,
    "–ö–µ–¥—Ä–æ–≤—ã–µ –û—Ä–µ—Ö–∏": 1000.00,
    "–ú–∞—Ç—á–∞": 600.00,
    "–ì–≤–æ–∑–¥–∏–∫–∞": 50.00,
    "–ë–∞–¥—å—è–Ω": 50.00,
    "—Ü–µ–¥—Ä–∞": 0.00,
    "–ö–æ—Ä–∏—Ü–∞ –ü–∞–ª—å—á–∏–∫–æ–≤–∞—è": 50.00,
    "–ö–æ—Ä–∏—Ü–∞ –ú–æ–ª–æ—Ç–∞—è": 50.00,
    "–°–∞—Ö–∞—Ä 1–∫–≥": 1500.00,
    "–°–æ–ª—ë–Ω–∞—è –∫–∞—Ä–∞–º–µ–ª—å": 300.00,
    "–ö–∞—Ä–∞–º–µ–ª—å": 300.00,
    "–í–∞–Ω–∏–ª—å": 300.00,
    "–ë–∞–Ω–∞–Ω": 300.00,
    "–®–æ–∫–æ–ª–∞–¥": 300.00,
    "–ö–ª—É–±–Ω–∏–∫–∞": 300.00,
    "Hazel Nut": 300.00,
    "–§–∏—Å—Ç–∞—à–∫–æ–≤—ã–π": 300.00,
    "–õ–∞–≤–∞–Ω–¥–∞": 300.00,
    "–Ø–±–ª–æ—á–Ω—ã–π –ø–∏—Ä–æ–≥": 300.00,
    "–ö–æ–∫–æ—Å": 300.00,
    "–¢–æ–ø–ø–∏–Ω–≥ –ë–∞–Ω–∞–Ω": 200.00,
    "–¢–æ–ø–ø–∏–Ω–≥ –®–æ–∫–æ–ª–∞–¥": 200.00,
    "–¢–æ–ø–ø–∏–Ω–≥ –ö–∞—Ä–∞–º–µ–ª—å": 200.00,
    "–°–≥—É—â–µ–Ω–Ω–æ–µ –º–æ–ª–æ–∫–æ": 200.00,
    "–ú–æ—Ä–æ–∂–µ–Ω–æ–µ": 200.00
}

# üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Excel –Ω–∞–∫–ª–∞–¥–Ω–æ–π
def create_excel(data):
    now = datetime.now()
    date_str = now.strftime("%Y-%m-%d %H:%M")
    filename = f"–ü—Ä–∏—Ö–æ–¥–Ω–∞—è –Ω–∞–∫–ª–∞–¥–Ω–∞—è - {date_str}.xlsx"
    filepath = os.path.join("/tmp", filename)

    wb = openpyxl.Workbook()
    ws = wb.active
    ws.title = "–ù–∞–∫–ª–∞–¥–Ω–∞—è"

    bold = Font(bold=True)
    center = Alignment(horizontal="center")
    thin_border = Border(left=Side(style='thin'), right=Side(style='thin'), top=Side(style='thin'), bottom=Side(style='thin'))

    ws.merge_cells("A1:D1")
    ws["A1"] = "GOODBUNS ¬∑ –ü—Ä–∏—Ö–æ–¥–Ω–∞—è –Ω–∞–∫–ª–∞–¥–Ω–∞—è"
    ws["A1"].font = Font(size=14, bold=True)
    ws["A1"].alignment = center

    ws.merge_cells("A2:D2")
    ws["A2"] = "–î–æ–∫—É–º–µ–Ω—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É –∑–∞–∫–∞–∑–æ–≤ GoodBuns"
    ws["A2"].font = Font(size=10, italic=True, color="666666")
    ws["A2"].alignment = center

    ws["A4"] = "–î–∞—Ç–∞:"
    ws["B4"] = date_str
    ws["A5"] = "–¢–æ—á–∫–∞:"
    ws["B5"] = data.get("point", "")
    ws["A6"] = "–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏:"
    ws["B6"] = data.get("day", "")

    for row in range(4, 7):
        ws[f"A{row}"].font = bold

    start_row = 8
    headers = ["–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ", "–¶–µ–Ω–∞ (‚ÇΩ)", "–°—É–º–º–∞ (‚ÇΩ)"]
    for col_num, header in enumerate(headers, 1):
        cell = ws.cell(row=start_row, column=col_num)
        cell.value = header
        cell.font = bold
        cell.alignment = center
        cell.border = thin_border
        ws.column_dimensions[get_column_letter(col_num)].width = 25

    total = 0
    items = data.get("items", [])
    for i, item in enumerate(items):
        name = item["name"].strip()
        qty = int(item["qty"])
        price = prices.get(name, 0)
        amount = qty * price
        total += amount

        for j, val in enumerate([name, qty, price, amount], 1):
            cell = ws.cell(row=start_row + 1 + i, column=j)
            cell.value = val
            cell.border = thin_border
            if j in [2, 3, 4]:
                cell.alignment = center

    end_row = start_row + 1 + len(items)
    ws.cell(row=end_row, column=3).value = "–ò–¢–û–ì–û"
    ws.cell(row=end_row, column=3).font = bold
    ws.cell(row=end_row, column=4).value = total
    ws.cell(row=end_row, column=4).font = bold
    ws.cell(row=end_row, column=4).alignment = center

    footer_row = end_row + 2
    ws.merge_cells(f"A{footer_row}:D{footer_row}")
    footer = ws[f"A{footer_row}"]
    footer.value = "–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑! –£–≤–∏–¥–∏–º—Å—è –Ω–∞ —Å–º–µ–Ω–µ ‚òï"
    footer.font = Font(italic=True, color="888888")
    footer.alignment = center

    wb.save(filepath)
    return filepath

# üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram
def send_to_telegram(filepath):
    bot_token = os.environ.get("BOT_TOKEN")
    chat_id = os.environ.get("CHAT_ID")
    url = f"https://api.telegram.org/bot{bot_token}/sendDocument"
    with open(filepath, 'rb') as doc_file:
        files = {'document': doc_file}
        data = {'chat_id': chat_id}
        response = requests.post(url, files=files, data=data)
    return response.status_code == 200

# üì¨ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫–∞–∑–∞
@app.route("/order", methods=["POST"])
def handle_order():
    data = request.get_json()
    if not data:
        return jsonify({"status": "error", "message": "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"}), 400
    try:
        filepath = create_excel(data)
        sent = send_to_telegram(filepath)
        return jsonify({"status": "ok", "saved": filepath, "telegram_sent": sent}), 200
    except Exception as e:
        return jsonify({"status": "error", "message": str(e)}), 500

# ‚òïÔ∏è –û–±—Ä–∞–±–æ—Ç–∫–∞ Telegram webhook
pins = {
    "1111": "–ú–∞–≥–∏—Å—Ç—Ä–∞–ª—å –ü–ª–∞–∑–∞",
    "2222": "–û–º–µ–≥–∞ –ü–ª–∞–∑–∞",
    "3333": "–ß–µ—Ä—Ä–∏ –¢–∞—É—ç—Ä",
    "4444": "–ì–µ—Ñ–µ—Å—Ç"
}

@app.route("/webhook/<token>", methods=["POST"])
def telegram_webhook(token):
    if token != os.environ.get("BOT_TOKEN"):
        return jsonify({"status": "unauthorized"}), 403

    data = request.get_json()
    if not data or "message" not in data:
        return jsonify({"status": "ignored"}), 200

    message = data["message"]
    chat_id = message["chat"]["id"]
    text = message.get("text", "").strip()

    if text == "/start":
        reply = "üëã –ü—Ä–∏–≤–µ—Ç! –í–≤–µ–¥–∏—Ç–µ PIN-–∫–æ–¥ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞:"
    elif text in pins:
        reply = f"‚úÖ PIN –ø—Ä–∏–Ω—è—Ç. –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ {pins[text]}!"
    else:
        reply = "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π PIN. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."

    send_telegram_text(chat_id, reply)
    return jsonify({"status": "ok"}), 200

# üì© –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ –≤ Telegram
def send_telegram_text(chat_id, text):
    bot_token = os.environ.get("BOT_TOKEN")
    url = f"https://api.telegram.org/bot{bot_token}/sendMessage"
    data = {"chat_id": chat_id, "text": text}
    requests.post(url, data=data)
